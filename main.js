!function(){"use strict";class e{#e;#t;#s;#n;#i;#o;#r;#a;#l;constructor(e,t,s){let{name:n,link:i}=e;this.#e=n,this.#t=i,this.#s=t,this.#l=s}#c(){this.#i=this.#n.querySelector(".card__like-button"),this.#o=this.#n.querySelector(".card__delete-button"),this.#i.addEventListener("click",(()=>{this.#m()})),this.#o.addEventListener("click",(()=>{this.#u()})),this.#r.addEventListener("click",(()=>{this.#l(this.#t,this.#e)}))}#m(){this.#i.classList.toggle("card__liked-heart")}#u(){this.#n.remove(),this.#n=null}getCardElement(){const e=document.querySelector(this.#s).content.firstElementChild;return this.#n=e.cloneNode(!0),this.#r=this.#n.querySelector(".card__image"),this.#a=this.#n.querySelector(".card__label-title"),this.#r.src=this.#t,this.#r.alt=this.#e,this.#a.textContent=this.#e,this.#c(),this.#n}}class t{#d;#p;#h;#_;constructor(e,t){this.#d=e,this.#p=t}#E(e){const{inputErrorClass:t,errorClass:s}=this.#d,n=this.#p.querySelector(`#${e.id}-error`);e.validity.valid?(e.classList.remove(t),n.textContent="",n.classList.remove(s)):(e.classList.add(t),n.textContent=e.validationMessage,n.classList.add(s))}#g(){this.#_.classList.contains(this.#d.inactiveButtonClass)||this.#_.classList.add(this.#d.inactiveButtonClass),this.#_.disabled||(this.#_.disabled=!0)}#b(){this.#_.classList.contains(this.#d.inactiveButtonClass)&&this.#_.classList.remove(this.#d.inactiveButtonClass),this.#_.disabled&&(this.#_.disabled=!1)}#S(){this.#h.every((e=>e.validity.valid))?this.#b():this.#g()}#c(){const{inputSelector:e}=this.#d;this.#h=[...this.#p.querySelectorAll(e)],this.#h.forEach((e=>{e.addEventListener("input",(t=>{this.#E(e),this.#S()}))}))}enableValidation(){this.#_=this.#p.querySelector(this.#d.submitButtonSelector),this.#c()}resetForm(){this.#p.reset(),this.#S()}}class s{#C;constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._popupClose=this._popupElement.querySelector(".modal__close"),this.#C=this._handleEscapeClose.bind(this),this.setEventListeners()}_handleEscapeClose(e){let{key:t}=e;"Escape"===t&&this.close()}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this.#C)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this.#C)}setEventListeners(){this._popupClose.addEventListener("click",(()=>{this.close()})),this._popupElement.addEventListener("mousedown",(e=>{e.target===e.currentTarget&&this.close()}))}}class n extends s{#k;constructor(e){let{popupSelector:t,handleFormSubmit:s,handleFormClose:n}=e;super({popupSelector:t}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=s,this._handleFormClose=n,this._setEventListeners()}_setEventListeners(){this.#k=this._popupForm.querySelectorAll(".modal__input"),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this.close()}))}close(){this._handleFormClose(),super.close()}_getInputValues(){const e={};return this.#k.forEach((t=>{e[t.name]=t.value})),e}setInputValues(e){this.#k.forEach((t=>{e[t.name]&&(t.value=e[t.name])}))}}const i=document.querySelector("#profile__edit-button"),o=document.querySelector(".profile__plus-button"),r=new class extends s{constructor(e){let{popupSelector:t}=e;super({popupSelector:t}),this._popupImage=document.querySelector(".big-picture-img"),this._popupImageDescription=document.querySelector(".modal__image_footer")}open(e){e&&(this._popupImage.src=e.link,this._popupImage.alt=e.name,this._popupImageDescription.textContent=e.name),super.open()}}({popupSelector:"#image-modal"}),a={};var l;l={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},Array.from(document.querySelectorAll(l.formSelector)).forEach((e=>{const s=new t(l,e),n=e.getAttribute("name");a[n]=s,s.enableValidation()}));const c=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{const t=this._renderer(e);this._container.append(t)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>u(e)},".cards__list"),m=new n({popupSelector:"#card-add-modal",handleFormSubmit:function(e){c.addItem(u(e))},handleFormClose:()=>{a.cardAddForm.resetForm()}});function u(t){return new e(t,"#card-template",d).getCardElement()}function d(e,t){r.open({link:e,name:t})}o.addEventListener("click",(()=>{m.open()}));const p=new class{constructor(e,t){this._nameElement=document.querySelector(e),this._descriptionElement=document.querySelector(t)}getUserInfo(){return{name:this._nameElement.textContent,description:this._descriptionElement.textContent}}setUserInfo(e){this._nameElement.textContent=e.name,this._descriptionElement.textContent=e.description}}(".profile__title",".profile__description"),h=new n({popupSelector:"#profile-edit-modal",handleFormSubmit:e=>{p.setUserInfo(e),a.profileEditForm.resetForm()},handleFormClose:()=>{}});i.addEventListener("click",(()=>{h.setInputValues(p.getUserInfo()),h.open()})),c.renderItems()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,